<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopMapper">

	<!-- 카테고리별 상품 리스트 : 1차 분류 -->
	<select id="list_1" resultType="com.board.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
		from tbl2_goods g inner join
		goods2_category c on g.cateCode = c.cateCode where g.cateCode = #{cateCode} or c.cateCodeRef = #{cateCodeRef}
	</select>

	<!-- 카테고리별 상품 리스트 : 2차 분류 -->
	<select id="list_2" resultType="com.board.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
		from tbl2_goods g inner join
		goods2_category c on g.cateCode = c.cateCode where g.cateCode = #{cateCode}
	</select>

	<!-- 상품 소감(댓글) 작성 -->
	<insert id="registReply">
		insert into tbl2_reply (gdsNum, userId, repNum, repCon) values (#{gdsNum}, #{userId}, tbl2_reply_seq.nextval, #{repCon})
	</insert>

	<!-- 상품 소감(댓글) 리스트 -->
	<select id="replyList" resultType="com.board.domain.ReplyListVO">
		select r.gdsNum, r.userId, r.repNum, r.repCon, r.repDate, m.userName
		from tbl2_reply r
		inner join tbl2_member m on r.userId = m.userId where gdsNum = #{gdsNum}
	</select>

	<!-- 상품 댓글 삭제 -->
	<delete id="deleteReply">
		delete tbl2_reply where repNum = #{repNum} and userId = #{userId}
	</delete>

	<!-- 아이디 체크 -->
	<select id="replyUserIdCheck" resultType="String">
		select userId from tbl2_reply where repNum = #{repNum}
	</select>

	<!-- 상품 소감(댓글) 수정 -->
	<update id="modifyReply">
		update tbl2_reply set repCon = #{repCon} where repNum = #{repNum} and userId = #{userId}
	</update>

	<!-- 카트 담기 -->
	<insert id="addCart">
		insert into tbl2_cart (cartNum, userId, gdsNum, cartStock) values (tbl2_cart_seq.nextval, #{userId}, #{gdsNum}, #{cartStock})
	</insert>

	<select id="cartList" resultType="com.board.domain.CartListVO">
		select
		row_number() over(order by c.cartNum desc) as num,
		c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate,
		g.gdsName, g.gdsPrice, g.gdsThumbImg
		from
		tbl2_cart c
		inner join tbl2_goods g
		on c.gdsNum = g.gdsNum
		where c.userId = #{userId}
	</select>

	<!-- 카트 삭제 -->
	<delete id="deleteCart">
		delete tbl2_cart where cartNum = #{cartNum} and userId = #{userId}
	</delete>

	<!-- 주문 정보 -->
	<insert id="orderInfo">
		insert into tbl2_order(orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount) values(#{orderId}, #{userId}, #{orderRec}, #{userAddr1}, #{userAddr2},
		#{userAddr3}, #{orderPhon}, #{amount})
	</insert>

	<!-- 주문 상세 정보 -->
	<insert id="orderInfo_Details">
		insert into tbl2_order_details(orderDetailsNum, orderId, gdsNum, cartStock)
		select tbl2_order_details_seq.nextval, #{orderId}, gdsNum, cartStock
		from tbl2_cart
	</insert>

	<!-- 카트 비우기 -->
	<delete id="cartAllDelete">
		delete tbl2_cart where userId = #{userId}
	</delete>

	<!-- 특정 유저의 주문 목록 -->
	<select id="orderList" resultType="com.board.domain.OrderVO">
		select orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate
		from tbl2_order where userId = #{userId}
	</select>

	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="com.board.domain.OrderListVO">
		select o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate, d.orderDetailsNum, d.gdsNum, d.cartStock, g.gdsName, g.gdsThumbImg, g.gdsPrice
		from tbl2_order o
		inner join tbl2_order_details d on o.orderId = d.orderId
		inner join tbl2_goods g on d.gdsNum = g.gdsNum
		where o.userId = #{userId} and o.orderId = #{orderId}
	</select>

</mapper>